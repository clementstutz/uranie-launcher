#!python3
""" Script to emulate the unitary calculation program.
"""

import argparse
import json
from pathlib import Path
import random
import sys


def _read_input_file(input_filename):
    input_absolute_filename = input_filename
    with open(input_absolute_filename, 'r', encoding='utf-8') as input_file:
        return json.load(input_file)


def _do_calculation(uncertain_variable):
    # approximate the value of Pi
    n_simu = 0 if uncertain_variable < 100 else int(uncertain_variable)
    inside_circle = 0
    for _ in range(n_simu):
        if random.uniform(-1, 1) ** 2 + random.uniform(-1, 1) ** 2 <= 1:
            inside_circle += 1
    return 4 * inside_circle / n_simu

def main_unitary_calculation(arguments):
    """Main function of the program"""
    # Interpret arguments
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument(
        "data_filename",
        help="Name of the input data file describing the transient scenario "
             "(COMM or XML)")
    parser.add_argument(
        "output_dirname",
        help="Name of the directory where to store the results of the transient")
    args = parser.parse_args(arguments)

    data = _read_input_file(args.data_filename)
    number_of_simulations = int(data["number_of_simulations"])

    result = _do_calculation(number_of_simulations)

    output_filename = Path(args.output_dirname) / "result.json"
    output_filename.write_text(json.dumps({"pi": result, "pi_square": result * result}, indent=2),
                               encoding='utf-8')

    return 0


if __name__ == "__main__":
    sys.exit(main_unitary_calculation(sys.argv[1:]))
